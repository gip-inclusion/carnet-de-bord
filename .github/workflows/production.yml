name: Production

on:
  push:
    tags:
      - v*

concurrency:
  group: production
  cancel-in-progress: true

jobs:
  ##############################################################################
  ## BUILD AND REGISTER BACKEND IMAGE
  ##############################################################################
  register-backend:
    name: Build & Register backend
    runs-on: ubuntu-latest
    steps:
      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          environment: prod
          dockerfile: backend/Dockerfile
          dockercontext: backend
          imageName: carnet-de-bord/backend
          token: ${{ secrets.GITHUB_TOKEN }}

  ##############################################################################
  ## BUILD AND REGISTER APPLICATION IMAGE
  ##############################################################################
  register-app:
    name: Build & Register application
    runs-on: ubuntu-latest
    steps:
      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          environment: prod
          dockerfile: app/Dockerfile
          dockercontext: app
          imageName: carnet-de-bord/app
          token: ${{ secrets.GITHUB_TOKEN }}
          dockerbuildargs: |
            VITE_CRISP_WEBSITE_ID=6de36b6d-871c-4d32-b3ac-45e1af29b211
            VITE_MATOMO_SITE_ID=51
            VITE_MATOMO_URL=https://matomo.fabrique.social.gouv.fr

  ##############################################################################
  ## BUILD AND REGISTER HASURA IMAGE
  ##############################################################################
  register-hasura:
    name: Build & Register Hasura
    runs-on: ubuntu-latest
    steps:
      - name: Use autodevops build and register
        uses: SocialGouv/actions/autodevops-build-register@v1
        with:
          environment: prod
          dockerfile: hasura/Dockerfile
          token: ${{ secrets.GITHUB_TOKEN }}
          imageName: carnet-de-bord/hasura

  ##############################################################################
  ## DEPLOY PRODUCTION APPLICATION
  ##############################################################################
  deploy-prod:
    name: Deploy production
    runs-on: ubuntu-latest
    needs: [register-app, register-hasura, register-backend]
    environment:
      name: production
      url: https://carnet-de-bord.fabrique.social.gouv.fr/
    steps:
      - name: Use kube-workflow deployment
        uses: SocialGouv/kube-workflow@v1
        with:
          environment: prod
          token: ${{ secrets.GITHUB_TOKEN }}
          kubeconfig: ${{ secrets.KUBECONFIG }}
          rancherProjectId: ${{ secrets.RANCHER_PROJECT_ID }}
          rancherProjectName: ${{ secrets.RANCHER_PROJECT_NAME }}
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Find matching workflow
        uses: SamhammerAG/last-successful-build-action@a54c030db88e60c06a9e50c25418748afc623c20
        id: latest-deployment
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          workflow: "Production"
          verify: true
      - name: Extract changelog content
        id: extract-changelog
        run: |
          CHANGELOG_CONTENT=$(cat << EOF
          $(git diff --output-indicator-new='*' ${{ steps.latest-deployment.outputs.sha }}...${{ github.sha }} CHANGELOG.md | egrep '^\*' | cut -c 2-)
          EOF
          )
          # replace new lines and carriage returns
          CHANGELOG_CONTENT="${CHANGELOG_CONTENT//'%'/'%25'}"
          CHANGELOG_CONTENT="${CHANGELOG_CONTENT//$'\n'/'%0A'}"
          CHANGELOG_CONTENT="${CHANGELOG_CONTENT//$'\r'/'%0D'}"
          echo "::set-output name=content::$CHANGELOG_CONTENT"
      - name: Create the deployment message
        run: |
          echo "{\"text\":\":tada: **${{ github.ref_name }} en production**\n${{ steps.extract-changelog.outputs.content }}\"}" > mattermost.json
      - name: Notify deployment on Mattermost
        uses: mattermost/action-mattermost-notify@master
        env:
          MATTERMOST_WEBHOOK_URL: ${{ secrets.MATTERMOST_WEBHOOK_URL }}
          MATTERMOST_CHANNEL: startup-carnetdebord-deploiements
