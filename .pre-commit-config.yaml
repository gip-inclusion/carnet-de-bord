ci:
  autoupdate_schedule: quarterly

default_stages: [commit]

default_install_hook_types: [pre-commit, commit-msg]

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.2.0
    hooks:
      - id: check-case-conflict
      - id: check-yaml
      - id: end-of-file-fixer
      - id: mixed-line-ending
      - id: trailing-whitespace

  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black
        args: [--target-version=py310]

  - repo: https://github.com/pycqa/isort
    rev: 5.10.1
    hooks:
      - id: isort

  - repo: local
    hooks:
      - id: app-prettier
        name: run prettier (app)
        language: system
        files: ^app/.*$
        types_or: [javascript, ts, svelte]
        entry: |
          bash -c 'npm --workspace app --silent run fix:prettier --write "${@#*/}"' --

      - id: app-eslint
        name: run eslint (app)
        language: system
        files: ^app/.*$
        types_or: [javascript, ts, svelte]
        exclude: /_gen/
        entry: |
          bash -c 'npm --workspace app --silent run fix:eslint "${@#*/}"' --

      - id: e2e-prettier
        name: run prettier (e2e)
        language: system
        files: ^e2e/.*$
        types_or: [javascript]
        entry: |
          bash -c 'npm --workspace e2e --silent run fix:prettier "${@#*/}"' --

      - id: e2e-eslint
        name: run eslint (e2e)
        language: system
        files: ^e2e/.*$
        types_or: [javascript]
        entry: |
          bash -c 'npm --workspace e2e --silent run fix:eslint "${@#*/}"' --

      - id: check-hasura-version
        name: ensure hasura version consistency
        language: system
        pass_filenames: false
        files: |
          (?x)^(
            hasura/Dockerfile|
            hasura/.hasura_version|
          )
        entry: |
          ./scripts/check-hasura-version.sh

      - id: check-codegen
        name: check if codegen needs to be ran
        language: system
        pass_filenames: false
        files: ^app/.*\.gql$
        # To determine if codegen needs to be ran, modification and commit dates
        # of all *.gql files and the generated file are computed, and then sorted.
        # For this we use git log and git status commands.
        # The most recent date is kept.
        # Finally, the most recent date shall be the one of the generated file.
        # Otherwise, it means that genereted file has to be re-generated.
        entry: |
          bash -c 'for i in "*.gql" app/src/lib/graphql/_gen/typed-document-nodes.ts;
            do echo $(git log -1 --format=%ct $i) $i;
            git status --porcelain "$i" |cut -c4-|xargs stat -f "%m %N";
          done | sort | tail -1 | grep -F "app/src/lib/graphql/_gen/typed-document-nodes.ts"' --

  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: "v8.0.0"
    hooks:
      - id: commitlint
        stages: [commit-msg]
        additional_dependencies: ["@commitlint/config-conventional"]
