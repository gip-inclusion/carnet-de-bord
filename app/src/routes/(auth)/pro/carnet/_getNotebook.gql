query GetNotebook($id: uuid!, $withOrientationRequests: Boolean = true) {
  refSituations: ref_situation {
    id
    description
    theme
  }
  notebook_public_view(where: { id: { _eq: $id } }) {
    id
    beneficiary {
      address1
      address2
      cafNumber
      city
      dateOfBirth
      email
      nir
      firstname
      id
      lastname
      mobileNumber
      peNumber
      postalCode
      rightAre
      rightAss
      rightBonus
      rightRsa
      rsaClosureDate
      rsaSuspensionReason
      rsaClosureReason
      structures {id}
      peInfos: externalDataInfos(where: { externalData: { source: { _eq: pe } } }, limit: 1) {
        external_data_id
        externalData {
          data
          source
        }
      }
      cafInfos: externalDataInfos(where: { externalData: { source: { _eq: cafmsa } } }, limit: 1) {
        externalData {
          data
        }
      }
      orientationRequest(order_by: { createdAt: desc }, limit: 1)
        @include(if: $withOrientationRequests) {
        id
        status
        createdAt
        decidedAt
        decisionReason
        requestedOrientationSystem {
          name
          orientationType
        }
        decidedOrientationSystem {
          name
          orientationType
        }
        beneficiary {
          id
          notebook {
            id
          }
        }
      }
    }
    previousReferent: members(
      where: {
        _and: [{ memberType: { _eq: "referent" } }, { membershipEndedAt: { _is_null: false } }]
      }
      order_by: { membershipEndedAt: desc_nulls_last }
      limit: 1
    ) {
      id
      account {
        id
      }
    }
    members(where: { active: { _eq: true } }, order_by: { lastModifiedAt: desc_nulls_last }) {
      id
      memberType
      lastModifiedAt
      lastVisitedAt
      createdAt
      account {
        id
        type
        professional {
          id
          lastname
          firstname
          position
          email
          mobileNumber
          structure {
            id
            name
            address1
            address2
            postalCode
            city
            website
          }
        }
        orientation_manager {
          id
          lastname
          firstname
          email
          phoneNumbers
        }
      }
    }
    notebook {
      id
      beneficiaryId
      workSituationDate
      workSituationEndDate
      workSituation
      rightRqth
      educationLevel
      contractType
      contractSignDate
      contractStartDate
      contractEndDate
      lastJobEndedAt
      beneficiary {
        structures { id }
      }
      notebookInfo {
        orientationReason
      }
      professionalProjects {
        id
        rome_code {
          id
          label
        }
        contract_type {
          id
          label
        }
        employment_type {
          id
          label
        }
        hourlyRate
        mobilityRadius
        updatedAt
        createdAt
        updater {
          orientation_manager {
            firstname
            lastname
          }
          professional {
            firstname
            lastname
            structure {
              name
            }
          }
        }
      }
      situations(where: { deletedAt: { _is_null: true } }, order_by: { createdAt: desc }) {
        id
        refSituation {
          id
          theme
          description
        }
        createdAt
        creator {
          orientation_manager {
            firstname
            lastname
          }
          professional {
            firstname
            lastname
            structure {
              name
            }
          }
        }
      }
      focuses(order_by: { theme: asc_nulls_last }) {
        id
        theme
        linkedTo
        createdAt
        creator {
          id
          professional {
            firstname
            lastname
            structure {
              name
            }
          }
          orientation_manager {
            id
            lastname
            firstname
          }
        }
        targets {
          id
          target
          actions_aggregate(where: { status: { _eq: in_progress } }) {
            aggregate {
              count
            }
          }
        }
      }
      appointments(
        where: { notebookId: { _eq: $id }, deleted_at: { _is_null: true } }
        distinct_on: memberAccountId
        order_by: [{ memberAccountId: asc }, { date: desc }]
      ) {
        date
        memberAccountId
      }
    }
  }
}

query GetNotebookEvents(
  $eventsStart: timestamptz = "-infinity"
  $eventsEnd: timestamptz = "infinity"
  $notebookId: uuid!
) {
  notebook_event(
    order_by: { eventDate: desc_nulls_last }
    where: { eventDate: { _gte: $eventsStart, _lte: $eventsEnd }, notebookId: { _eq: $notebookId } }
  ) {
    ...eventFields
  }
}

fragment eventFields on notebook_event {
  id
  eventDate
  event
  eventType
  creatorId
  creator {
    professional {
      structureId
      structure {
        name
      }
    }
  }
}
