mutation AddNotebookMemberWithBeneficiaryStructureUpdate(
  $notebookId: uuid!
  $accountId: uuid!
  $structureId: uuid!
  $beneficiaryId: uuid!
  $withUpdatedStructure: Boolean!
) {
  # update notebook_members relations
  deactivateMembers: update_notebook_member(
    _set: { active: false, membershipEndedAt: now }
    where: {
      _or: [
        { active: { _eq: true }, notebookId: { _eq: $notebookId }, memberType: { _eq: "referent" } }
        { active: { _eq: true }, notebookId: { _eq: $notebookId }, accountId: { _eq: $accountId } }
      ]
    }
  ) {
    affected_rows
  }

  insert_notebook_member_one(
    object: { notebookId: $notebookId, accountId: $accountId, memberType: "referent", active: true }
  ) {
    notebook {
      beneficiaryId
    }
  }
  # Update beneficiaryStructure relationships
  update_beneficiary_structure(
    where: { beneficiaryId: { _eq: $beneficiaryId }, status: { _eq: "current" } }
    _set: { status: "outdated" }
  ) @include(if: $withUpdatedStructure) {
    affected_rows
  }
  insert_beneficiary_structure_one(
    object: { beneficiaryId: $beneficiaryId, structureId: $structureId, status: "current" }
  ) @include(if: $withUpdatedStructure) {
    id
  }
}
