# we use 2 search field type since hasura don't
# let us use a string for citext search
# https://github.com/hasura/graphql-engine/issues/9081
query SearchProfessional($search: String, $searchStructure: citext, $accountIds: [uuid!] = []) {
  professionals: professional(
    where: {
      _or: [
        { firstname: { _ilike: $search } }
        { lastname: { _ilike: $search } }
        { structure: { name: { _ilike: $searchStructure } } }
        { structure: { postalCode: { _ilike: $search } } }
      ]
      _not: { account: { id: { _in: $accountIds } } }
      account: { deletedAt: { _is_null: true } }
    }
    limit: 5
  ) {
    id
    firstname
    lastname
    structure {
      id
      name
      postalCode
      phone
    }
    account {
      id
    }
  }
  count: professional_aggregate(
    where: {
      _or: [
        { firstname: { _ilike: $search } }
        { lastname: { _ilike: $search } }
        { structure: { name: { _ilike: $searchStructure } } }
        { structure: { postalCode: { _ilike: $search } } }
      ]
      _not: { account: { id: { _in: $accountIds } } }
      account: { deletedAt: { _is_null: true } }
    }
  ) {
    aggregate {
      count(distinct: false)
    }
  }
}
