-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CdbGQL.Enum.Notebook_member_select_column_notebook_member_aggregate_bool_exp_bool_or_arguments_columns exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| select "notebook\_member\_aggregate\_bool\_exp\_bool\_or\_arguments\_columns" columns of table "notebook\_member"

  - Active - column name

-}
type Notebook_member_select_column_notebook_member_aggregate_bool_exp_bool_or_arguments_columns
    = Active


list : List Notebook_member_select_column_notebook_member_aggregate_bool_exp_bool_or_arguments_columns
list =
    [ Active ]


decoder : Decoder Notebook_member_select_column_notebook_member_aggregate_bool_exp_bool_or_arguments_columns
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "active" ->
                        Decode.succeed Active

                    _ ->
                        Decode.fail ("Invalid Notebook_member_select_column_notebook_member_aggregate_bool_exp_bool_or_arguments_columns type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Notebook_member_select_column_notebook_member_aggregate_bool_exp_bool_or_arguments_columns -> String
toString enum____ =
    case enum____ of
        Active ->
            "active"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Notebook_member_select_column_notebook_member_aggregate_bool_exp_bool_or_arguments_columns
fromString enumString____ =
    case enumString____ of
        "active" ->
            Just Active

        _ ->
            Nothing
