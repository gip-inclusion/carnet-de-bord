-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CdbGQL.Enum.Notebook_action_constraint exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| unique or primary key constraints on table "notebook\_action"

  - Notebook\_action\_pkey - unique or primary key constraint on columns "id"
  - Notebook\_action\_target\_id\_action\_key - unique or primary key constraint on columns "action", "target\_id"

-}
type Notebook_action_constraint
    = Notebook_action_pkey
    | Notebook_action_target_id_action_key


list : List Notebook_action_constraint
list =
    [ Notebook_action_pkey, Notebook_action_target_id_action_key ]


decoder : Decoder Notebook_action_constraint
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "notebook_action_pkey" ->
                        Decode.succeed Notebook_action_pkey

                    "notebook_action_target_id_action_key" ->
                        Decode.succeed Notebook_action_target_id_action_key

                    _ ->
                        Decode.fail ("Invalid Notebook_action_constraint type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Notebook_action_constraint -> String
toString enum____ =
    case enum____ of
        Notebook_action_pkey ->
            "notebook_action_pkey"

        Notebook_action_target_id_action_key ->
            "notebook_action_target_id_action_key"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Notebook_action_constraint
fromString enumString____ =
    case enumString____ of
        "notebook_action_pkey" ->
            Just Notebook_action_pkey

        "notebook_action_target_id_action_key" ->
            Just Notebook_action_target_id_action_key

        _ ->
            Nothing
