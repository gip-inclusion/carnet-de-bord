-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CdbGQL.Enum.Orientation_request_select_column exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| select columns of table "orientation\_request"

  - BeneficiaryId - column name
  - CreatedAt - column name
  - DecidedAt - column name
  - DecidedOrientationSystemId - column name
  - Id - column name
  - Reason - column name
  - RequestedOrientationSystemId - column name
  - Requestor\_account\_id - column name
  - Status - column name
  - UpdatedAt - column name

-}
type Orientation_request_select_column
    = BeneficiaryId
    | CreatedAt
    | DecidedAt
    | DecidedOrientationSystemId
    | Id
    | Reason
    | RequestedOrientationSystemId
    | Requestor_account_id
    | Status
    | UpdatedAt


list : List Orientation_request_select_column
list =
    [ BeneficiaryId, CreatedAt, DecidedAt, DecidedOrientationSystemId, Id, Reason, RequestedOrientationSystemId, Requestor_account_id, Status, UpdatedAt ]


decoder : Decoder Orientation_request_select_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "beneficiaryId" ->
                        Decode.succeed BeneficiaryId

                    "createdAt" ->
                        Decode.succeed CreatedAt

                    "decidedAt" ->
                        Decode.succeed DecidedAt

                    "decidedOrientationSystemId" ->
                        Decode.succeed DecidedOrientationSystemId

                    "id" ->
                        Decode.succeed Id

                    "reason" ->
                        Decode.succeed Reason

                    "requestedOrientationSystemId" ->
                        Decode.succeed RequestedOrientationSystemId

                    "requestor_account_id" ->
                        Decode.succeed Requestor_account_id

                    "status" ->
                        Decode.succeed Status

                    "updatedAt" ->
                        Decode.succeed UpdatedAt

                    _ ->
                        Decode.fail ("Invalid Orientation_request_select_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Orientation_request_select_column -> String
toString enum____ =
    case enum____ of
        BeneficiaryId ->
            "beneficiaryId"

        CreatedAt ->
            "createdAt"

        DecidedAt ->
            "decidedAt"

        DecidedOrientationSystemId ->
            "decidedOrientationSystemId"

        Id ->
            "id"

        Reason ->
            "reason"

        RequestedOrientationSystemId ->
            "requestedOrientationSystemId"

        Requestor_account_id ->
            "requestor_account_id"

        Status ->
            "status"

        UpdatedAt ->
            "updatedAt"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Orientation_request_select_column
fromString enumString____ =
    case enumString____ of
        "beneficiaryId" ->
            Just BeneficiaryId

        "createdAt" ->
            Just CreatedAt

        "decidedAt" ->
            Just DecidedAt

        "decidedOrientationSystemId" ->
            Just DecidedOrientationSystemId

        "id" ->
            Just Id

        "reason" ->
            Just Reason

        "requestedOrientationSystemId" ->
            Just RequestedOrientationSystemId

        "requestor_account_id" ->
            Just Requestor_account_id

        "status" ->
            Just Status

        "updatedAt" ->
            Just UpdatedAt

        _ ->
            Nothing
