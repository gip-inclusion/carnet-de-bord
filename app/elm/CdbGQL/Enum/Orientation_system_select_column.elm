-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CdbGQL.Enum.Orientation_system_select_column exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| select columns of table "orientation\_system"

  - CreatedAt - column name
  - Deployment\_id - column name
  - Id - column name
  - Name - column name
  - OrientationType - column name
  - UpdatedAt - column name

-}
type Orientation_system_select_column
    = CreatedAt
    | Deployment_id
    | Id
    | Name
    | OrientationType
    | UpdatedAt


list : List Orientation_system_select_column
list =
    [ CreatedAt, Deployment_id, Id, Name, OrientationType, UpdatedAt ]


decoder : Decoder Orientation_system_select_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "createdAt" ->
                        Decode.succeed CreatedAt

                    "deployment_id" ->
                        Decode.succeed Deployment_id

                    "id" ->
                        Decode.succeed Id

                    "name" ->
                        Decode.succeed Name

                    "orientationType" ->
                        Decode.succeed OrientationType

                    "updatedAt" ->
                        Decode.succeed UpdatedAt

                    _ ->
                        Decode.fail ("Invalid Orientation_system_select_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Orientation_system_select_column -> String
toString enum____ =
    case enum____ of
        CreatedAt ->
            "createdAt"

        Deployment_id ->
            "deployment_id"

        Id ->
            "id"

        Name ->
            "name"

        OrientationType ->
            "orientationType"

        UpdatedAt ->
            "updatedAt"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Orientation_system_select_column
fromString enumString____ =
    case enumString____ of
        "createdAt" ->
            Just CreatedAt

        "deployment_id" ->
            Just Deployment_id

        "id" ->
            Just Id

        "name" ->
            Just Name

        "orientationType" ->
            Just OrientationType

        "updatedAt" ->
            Just UpdatedAt

        _ ->
            Nothing
