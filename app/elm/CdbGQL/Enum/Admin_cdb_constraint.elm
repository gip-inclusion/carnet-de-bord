-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CdbGQL.Enum.Admin_cdb_constraint exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| unique or primary key constraints on table "admin\_cdb"

  - Admin\_email\_unique - unique or primary key constraint on columns "email"
  - Admin\_pkey - unique or primary key constraint on columns "id"

-}
type Admin_cdb_constraint
    = Admin_email_unique
    | Admin_pkey


list : List Admin_cdb_constraint
list =
    [ Admin_email_unique, Admin_pkey ]


decoder : Decoder Admin_cdb_constraint
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "admin_email_unique" ->
                        Decode.succeed Admin_email_unique

                    "admin_pkey" ->
                        Decode.succeed Admin_pkey

                    _ ->
                        Decode.fail ("Invalid Admin_cdb_constraint type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Admin_cdb_constraint -> String
toString enum____ =
    case enum____ of
        Admin_email_unique ->
            "admin_email_unique"

        Admin_pkey ->
            "admin_pkey"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Admin_cdb_constraint
fromString enumString____ =
    case enumString____ of
        "admin_email_unique" ->
            Just Admin_email_unique

        "admin_pkey" ->
            Just Admin_pkey

        _ ->
            Nothing
