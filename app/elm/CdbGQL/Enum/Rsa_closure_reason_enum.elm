-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CdbGQL.Enum.Rsa_closure_reason_enum exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-|

  - Caf\_annulation\_bascule\_rmi - Clôture suite à l'annulation de la bascule RMI/API
  - Caf\_decision\_pcg - Clôture suite décision du Président du Conseil général
  - Caf\_echeance - Clôture suite à échéance (4 mois sans droits)
  - Caf\_mutation - Clôture suite à mutation du dossier dans un autre organisme
  - Caf\_radie\_autre\_motif - Radié autre motif
  - Caf\_radie\_fin\_droit - Radié fin de droit
  - Caf\_radie\_option\_rso - Radié option RSO DOM
  - Caf\_radie\_option\_rsta - Radié option RSTA DOM
  - Caf\_regroupement - Clôture pour regroupement de dossier

-}
type Rsa_closure_reason_enum
    = Caf_annulation_bascule_rmi
    | Caf_decision_pcg
    | Caf_echeance
    | Caf_mutation
    | Caf_radie_autre_motif
    | Caf_radie_fin_droit
    | Caf_radie_option_rso
    | Caf_radie_option_rsta
    | Caf_regroupement


list : List Rsa_closure_reason_enum
list =
    [ Caf_annulation_bascule_rmi, Caf_decision_pcg, Caf_echeance, Caf_mutation, Caf_radie_autre_motif, Caf_radie_fin_droit, Caf_radie_option_rso, Caf_radie_option_rsta, Caf_regroupement ]


decoder : Decoder Rsa_closure_reason_enum
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "caf_annulation_bascule_rmi" ->
                        Decode.succeed Caf_annulation_bascule_rmi

                    "caf_decision_pcg" ->
                        Decode.succeed Caf_decision_pcg

                    "caf_echeance" ->
                        Decode.succeed Caf_echeance

                    "caf_mutation" ->
                        Decode.succeed Caf_mutation

                    "caf_radie_autre_motif" ->
                        Decode.succeed Caf_radie_autre_motif

                    "caf_radie_fin_droit" ->
                        Decode.succeed Caf_radie_fin_droit

                    "caf_radie_option_rso" ->
                        Decode.succeed Caf_radie_option_rso

                    "caf_radie_option_rsta" ->
                        Decode.succeed Caf_radie_option_rsta

                    "caf_regroupement" ->
                        Decode.succeed Caf_regroupement

                    _ ->
                        Decode.fail ("Invalid Rsa_closure_reason_enum type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Rsa_closure_reason_enum -> String
toString enum____ =
    case enum____ of
        Caf_annulation_bascule_rmi ->
            "caf_annulation_bascule_rmi"

        Caf_decision_pcg ->
            "caf_decision_pcg"

        Caf_echeance ->
            "caf_echeance"

        Caf_mutation ->
            "caf_mutation"

        Caf_radie_autre_motif ->
            "caf_radie_autre_motif"

        Caf_radie_fin_droit ->
            "caf_radie_fin_droit"

        Caf_radie_option_rso ->
            "caf_radie_option_rso"

        Caf_radie_option_rsta ->
            "caf_radie_option_rsta"

        Caf_regroupement ->
            "caf_regroupement"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Rsa_closure_reason_enum
fromString enumString____ =
    case enumString____ of
        "caf_annulation_bascule_rmi" ->
            Just Caf_annulation_bascule_rmi

        "caf_decision_pcg" ->
            Just Caf_decision_pcg

        "caf_echeance" ->
            Just Caf_echeance

        "caf_mutation" ->
            Just Caf_mutation

        "caf_radie_autre_motif" ->
            Just Caf_radie_autre_motif

        "caf_radie_fin_droit" ->
            Just Caf_radie_fin_droit

        "caf_radie_option_rso" ->
            Just Caf_radie_option_rso

        "caf_radie_option_rsta" ->
            Just Caf_radie_option_rsta

        "caf_regroupement" ->
            Just Caf_regroupement

        _ ->
            Nothing
