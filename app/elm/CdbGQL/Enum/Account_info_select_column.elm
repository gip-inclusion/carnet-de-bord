-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CdbGQL.Enum.Account_info_select_column exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| select columns of table "account\_info"

  - Account\_id - column name
  - Email - column name
  - Firstname - column name
  - Lastname - column name

-}
type Account_info_select_column
    = Account_id
    | Email
    | Firstname
    | Lastname


list : List Account_info_select_column
list =
    [ Account_id, Email, Firstname, Lastname ]


decoder : Decoder Account_info_select_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "account_id" ->
                        Decode.succeed Account_id

                    "email" ->
                        Decode.succeed Email

                    "firstname" ->
                        Decode.succeed Firstname

                    "lastname" ->
                        Decode.succeed Lastname

                    _ ->
                        Decode.fail ("Invalid Account_info_select_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representing the Enum to a string that the GraphQL server will recognize.
-}
toString : Account_info_select_column -> String
toString enum____ =
    case enum____ of
        Account_id ->
            "account_id"

        Email ->
            "email"

        Firstname ->
            "firstname"

        Lastname ->
            "lastname"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Account_info_select_column
fromString enumString____ =
    case enumString____ of
        "account_id" ->
            Just Account_id

        "email" ->
            Just Email

        "firstname" ->
            Just Firstname

        "lastname" ->
            Just Lastname

        _ ->
            Nothing
