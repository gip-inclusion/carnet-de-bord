-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module CdbGQL.Object.Professional exposing (..)

import CdbGQL.Enum.Professional_orientation_system_select_column
import CdbGQL.InputObject
import CdbGQL.Interface
import CdbGQL.Object
import CdbGQL.Scalar
import CdbGQL.ScalarCodecs
import CdbGQL.Union
import Graphql.Internal.Builder.Argument as Argument exposing (Argument)
import Graphql.Internal.Builder.Object as Object
import Graphql.Internal.Encode as Encode exposing (Value)
import Graphql.Operation exposing (RootMutation, RootQuery, RootSubscription)
import Graphql.OptionalArgument exposing (OptionalArgument(..))
import Graphql.SelectionSet exposing (SelectionSet)
import Json.Decode as Decode


{-| An object relationship
-}
account :
    SelectionSet decodesTo CdbGQL.Object.Account
    -> SelectionSet (Maybe decodesTo) CdbGQL.Object.Professional
account object____ =
    Object.selectionForCompositeField "account" [] object____ (Basics.identity >> Decode.nullable)


createdAt : SelectionSet CdbGQL.ScalarCodecs.Timestamptz CdbGQL.Object.Professional
createdAt =
    Object.selectionForField "ScalarCodecs.Timestamptz" "createdAt" [] (CdbGQL.ScalarCodecs.codecs |> CdbGQL.Scalar.unwrapCodecs |> .codecTimestamptz |> .decoder)


email : SelectionSet CdbGQL.ScalarCodecs.Citext CdbGQL.Object.Professional
email =
    Object.selectionForField "ScalarCodecs.Citext" "email" [] (CdbGQL.ScalarCodecs.codecs |> CdbGQL.Scalar.unwrapCodecs |> .codecCitext |> .decoder)


firstname : SelectionSet String CdbGQL.Object.Professional
firstname =
    Object.selectionForField "String" "firstname" [] Decode.string


id : SelectionSet CdbGQL.ScalarCodecs.Uuid CdbGQL.Object.Professional
id =
    Object.selectionForField "ScalarCodecs.Uuid" "id" [] (CdbGQL.ScalarCodecs.codecs |> CdbGQL.Scalar.unwrapCodecs |> .codecUuid |> .decoder)


lastname : SelectionSet String CdbGQL.Object.Professional
lastname =
    Object.selectionForField "String" "lastname" [] Decode.string


mobileNumber : SelectionSet (Maybe String) CdbGQL.Object.Professional
mobileNumber =
    Object.selectionForField "(Maybe String)" "mobileNumber" [] (Decode.string |> Decode.nullable)


type alias OrientationSystemsOptionalArguments =
    { distinct_on : OptionalArgument (List CdbGQL.Enum.Professional_orientation_system_select_column.Professional_orientation_system_select_column)
    , limit : OptionalArgument Int
    , offset : OptionalArgument Int
    , order_by : OptionalArgument (List CdbGQL.InputObject.Professional_orientation_system_order_by)
    , where_ : OptionalArgument CdbGQL.InputObject.Professional_orientation_system_bool_exp
    }


{-| An array relationship

  - distinct\_on - distinct select on columns
  - limit - limit the number of rows returned
  - offset - skip the first n rows. Use only with order\_by
  - order\_by - sort the rows by one or more columns
  - where\_ - filter the rows returned

-}
orientationSystems :
    (OrientationSystemsOptionalArguments -> OrientationSystemsOptionalArguments)
    -> SelectionSet decodesTo CdbGQL.Object.Professional_orientation_system
    -> SelectionSet (List decodesTo) CdbGQL.Object.Professional
orientationSystems fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { distinct_on = Absent, limit = Absent, offset = Absent, order_by = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "distinct_on" filledInOptionals____.distinct_on (Encode.enum CdbGQL.Enum.Professional_orientation_system_select_column.toString |> Encode.list), Argument.optional "limit" filledInOptionals____.limit Encode.int, Argument.optional "offset" filledInOptionals____.offset Encode.int, Argument.optional "order_by" filledInOptionals____.order_by (CdbGQL.InputObject.encodeProfessional_orientation_system_order_by |> Encode.list), Argument.optional "where" filledInOptionals____.where_ CdbGQL.InputObject.encodeProfessional_orientation_system_bool_exp ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "orientationSystems" optionalArgs____ object____ (Basics.identity >> Decode.list)


type alias OrientationSystemsAggregateOptionalArguments =
    { distinct_on : OptionalArgument (List CdbGQL.Enum.Professional_orientation_system_select_column.Professional_orientation_system_select_column)
    , limit : OptionalArgument Int
    , offset : OptionalArgument Int
    , order_by : OptionalArgument (List CdbGQL.InputObject.Professional_orientation_system_order_by)
    , where_ : OptionalArgument CdbGQL.InputObject.Professional_orientation_system_bool_exp
    }


{-| An aggregate relationship

  - distinct\_on - distinct select on columns
  - limit - limit the number of rows returned
  - offset - skip the first n rows. Use only with order\_by
  - order\_by - sort the rows by one or more columns
  - where\_ - filter the rows returned

-}
orientationSystems_aggregate :
    (OrientationSystemsAggregateOptionalArguments -> OrientationSystemsAggregateOptionalArguments)
    -> SelectionSet decodesTo CdbGQL.Object.Professional_orientation_system_aggregate
    -> SelectionSet decodesTo CdbGQL.Object.Professional
orientationSystems_aggregate fillInOptionals____ object____ =
    let
        filledInOptionals____ =
            fillInOptionals____ { distinct_on = Absent, limit = Absent, offset = Absent, order_by = Absent, where_ = Absent }

        optionalArgs____ =
            [ Argument.optional "distinct_on" filledInOptionals____.distinct_on (Encode.enum CdbGQL.Enum.Professional_orientation_system_select_column.toString |> Encode.list), Argument.optional "limit" filledInOptionals____.limit Encode.int, Argument.optional "offset" filledInOptionals____.offset Encode.int, Argument.optional "order_by" filledInOptionals____.order_by (CdbGQL.InputObject.encodeProfessional_orientation_system_order_by |> Encode.list), Argument.optional "where" filledInOptionals____.where_ CdbGQL.InputObject.encodeProfessional_orientation_system_bool_exp ]
                |> List.filterMap Basics.identity
    in
    Object.selectionForCompositeField "orientationSystems_aggregate" optionalArgs____ object____ Basics.identity


position : SelectionSet (Maybe String) CdbGQL.Object.Professional
position =
    Object.selectionForField "(Maybe String)" "position" [] (Decode.string |> Decode.nullable)


{-| An object relationship
-}
structure :
    SelectionSet decodesTo CdbGQL.Object.Structure
    -> SelectionSet decodesTo CdbGQL.Object.Professional
structure object____ =
    Object.selectionForCompositeField "structure" [] object____ Basics.identity


structureId : SelectionSet CdbGQL.ScalarCodecs.Uuid CdbGQL.Object.Professional
structureId =
    Object.selectionForField "ScalarCodecs.Uuid" "structureId" [] (CdbGQL.ScalarCodecs.codecs |> CdbGQL.Scalar.unwrapCodecs |> .codecUuid |> .decoder)


updatedAt : SelectionSet CdbGQL.ScalarCodecs.Timestamptz CdbGQL.Object.Professional
updatedAt =
    Object.selectionForField "ScalarCodecs.Timestamptz" "updatedAt" [] (CdbGQL.ScalarCodecs.codecs |> CdbGQL.Scalar.unwrapCodecs |> .codecTimestamptz |> .decoder)
