mutation AcceptOrientationRequest(
  $orientation_request_id: uuid!
  $orientation_type: orientation_type_enum
  $notebook_id: uuid!
  $beneficiary_id: uuid!
  $structure_id: uuid!
  $old_referent_account_id: uuid
  $with_old_referent: Boolean = false
  $new_referent_account_id: uuid
  $with_new_referent: Boolean = false
  $date: timestamp
) {
  insert_notebook_info_one(
    object: {
      notebookId: $notebook_id
      orientation: $orientation_type
      needOrientation: false
    }
    on_conflict: {
      constraint: notebook_info_pkey
      update_columns: [orientation, needOrientation]
    }
  ) {
    notebookId
  }
  old_ref: update_notebook_member(
    where: {
      notebookId: { _eq: $notebook_id }
      memberType: { _eq: "referent" }
    }
    _set: { active: false,  membership_ends_at: $date }
  ) {
    affected_rows
  }
  new_ref: update_notebook_member(
    where: {
      notebookId: { _eq: $notebook_id }
      accountId: { _eq: $new_referent_account_id }
      active: true
    }
    _set: { active: false,  membership_ends_at: $date }
  ) {
    affected_rows
  }
  update_beneficiary_structure(
    where: { beneficiaryId: { _eq: $beneficiary_id } }
    _set: { status: "outdated" }
  ) {
    affected_rows
  }

  createBeneficiaryStructure: insert_beneficiary_structure_one(
    object: { beneficiaryId: $beneficiary_id, structureId: $structure_id }
  ) {
    id
  }

  new_ref_new_line: insert_notebook_member_one(
    object: {
      notebookId: $notebook_id
      memberType: "referent"
      accountId: $new_referent_account_id
      active: true
    }
    on_conflict: {
      constraint: notebook_member_notebook_id_account_id_key
      update_columns: [memberType, active]
    }
  ) @include(if: $with_new_referent) {
    id
  }
  old_ref_new_line: insert_notebook_member_one(
    object: {
      notebookId: $notebook_id
      memberType: "no_referent"
      accountId: $old_referent_account_id
      active: true
    }
  ) @include(if: $with_old_referent) {
    id
  }
  orientation_request: update_orientation_request_by_pk(
    pk_columns: { id: $orientation_request_id }
    _set: {
      decidedAt: now
      status: "accepted"
      decidedOrientationTypeId: $orientation_type
    }
  ) {
    id
    createdAt
  }
}
